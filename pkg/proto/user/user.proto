syntax = "proto3";
option go_package = "./user;user";
package user;

message CommonResp{
  int32  errorCode = 1;
  string errorMsg = 2;
}
message DeleteUsersResp{
  CommonResp  commonResp = 1;
  repeated string failedUidList = 2;
}
message DeleteUsersReq{
  repeated string  deleteUidList = 2;
  string token = 3;
  string OperationID = 4;
}
message GetAllUsersUidReq{
  string token = 2;
  string operationID = 3;

}
message GetAllUsersUidResp{
  CommonResp  commonResp = 1;
  repeated string uidList = 2;

}
message GetUserInfoReq{
  repeated string userIDList = 1;
  string token = 2;
  string OperationID = 3;
}
message GetUserInfoResp{
  int32  errorCode = 1;
  string errorMsg = 2;
  repeated UserInfo Data = 3;
}
message UserInfo{
  string uid = 1;
  string name = 2;
  string icon = 3;
  int32 gender = 4;
  string mobile = 5;
  string birth = 6;
  string email = 7;
  string ex = 8;
}


message LogoutReq{
  string  OperationID = 1;
  string  token = 2;
}

message UpdateUserInfoReq{
  string icon = 1;
  string name = 2;
  int32  gender = 3;
  string mobile = 4;
  string birth = 5;
  string email = 6;
  string ex = 7;
  string token = 8;
  string  OperationID = 9;
  string Uid = 10;
}

message SetReceiveMessageOptReq{
    string uId = 1;
    int32  opt = 2;
    repeated string conversationId = 3;
    string  operationID = 4;
}

message SetReceiveMessageOptResp{
    int32  errCode = 1;
    string errMsg = 2;
    repeated OptResult optResult = 3;
}


message GetReceiveMessageOptReq{
    string uId = 1;
    repeated string conversationId = 2;
    string  operationID = 3;
}

message OptResult{
    string conversationId = 1;
    int32 result = 2; //-1: failed;  0:default; 1: not receive ; 2: not jpush
}

message GetReceiveMessageOptResp{
    int32  errCode = 1;
    string errMsg = 2;
    repeated OptResult conversationOptResult = 3;
}

message GetAllConversationMsgOptReq{
    string uId = 1;
    string  operationID = 2;
}

message GetAllConversationMsgOptResp{
    int32  errCode = 1;
    string errMsg = 2;
    repeated OptResult conversationOptResult = 3;
}


service user {
  //获取用户信息
  rpc getUserInfo(GetUserInfoReq) returns(GetUserInfoResp);
  //更新用户信息
  rpc UpdateUserInfo(UpdateUserInfoReq) returns(CommonResp);
  //删除用户信息
  rpc DeleteUsers(DeleteUsersReq)returns(DeleteUsersResp);
  //获取说有用户id
  rpc GetAllUsersUid(GetAllUsersUidReq)returns(GetAllUsersUidResp);
  //
  rpc SetReceiveMessageOpt(SetReceiveMessageOptReq)returns(SetReceiveMessageOptResp);
  //
  rpc GetReceiveMessageOpt(GetReceiveMessageOptReq)returns(GetReceiveMessageOptResp);
  //
  rpc GetAllConversationMsgOpt(GetAllConversationMsgOptReq)returns(GetAllConversationMsgOptResp);
}
