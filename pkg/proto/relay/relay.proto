syntax = "proto3";
option go_package = "./relay;pbRelay";
package relay;

message MsgToUserReq {
  string SendID = 1;
  string RecvID = 2;
  string Content = 5;
  int64  RecvSeq = 6;
  int64 SendTime = 7;
  int32  MsgFrom = 8;
  int32  ContentType = 9;
  int32  SessionType = 10;
  string OperationID = 11;
  string ServerMsgID = 12;
  int32  PlatformID = 13;
  string SenderNickName = 14;
  string SenderFaceURL = 15;
  string ClientMsgID = 16;
}
message MsgToUserResp{
repeated SingleMsgToUser resp = 1;
}
//message SendMsgByWSReq{
//  string SendID = 1;
//  string RecvID = 2;
//  string Content = 3;
//  int64 SendTime = 4;
//  int64  MsgFrom = 5;
//  int64  ContentType = 6;
//  int64  SessionType = 7;
//  string OperationID = 8;
//  int64  PlatformID = 9;
//}
message SingleMsgToUser{
  int64   ResultCode = 1;
  string  RecvID = 2;
  int32   RecvPlatFormID = 3;
}
message GetUsersOnlineStatusReq{
  repeated string  userIDList = 1;
  string  operationID = 2;
}
message GetUsersOnlineStatusResp{
  int32  errCode = 1;
  string errMsg = 2;
  repeated SuccessResult successResult = 3;
  repeated FailedDetail failedResult = 4;
  message SuccessDetail{
    string platform = 1;
    string status = 2;
  }
  message FailedDetail{
    string userID = 3;
    int32  errCode = 1;
    string errMsg = 2;
  }
  message SuccessResult{
    string userID = 1;
    string status = 2;
    repeated SuccessDetail detailPlatformStatus = 3;
  }
}
service OnlineMessageRelayService {
  //发送消息给用户
  rpc MsgToUser(MsgToUserReq) returns(MsgToUserResp);
  //根据用户id列表获取在线用户的状态
  rpc GetUsersOnlineStatus(GetUsersOnlineStatusReq)returns(GetUsersOnlineStatusResp);
//  rpc SendMsgByWS(SendMsgByWSReq)  returns(MsgToUserResp);
}

